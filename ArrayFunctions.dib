#!javascript

const horror = ['Freddy', 'Jason', 'Michael', 'Ghostface', 'Chucky'];

let fourthItem = horror[3];


console.log(fourthItem);

#!javascript

const  netflixShows = ["Orange is the New Black", "Black Mirror", "Chewing Gum"];

// Adding element to the array.
netflixShows.push("netflixShows");

// Write a console.log statement below to check your work!
console.log(netflixShows);

#!javascript

const synonyms = ['fantastic', 'wonderful', 'great'];
const greetings = [];

// 1.
// Loop through the synonyms array. Each time, push a string into the greetings array. 
// The string should have the format 'Have a [synonym] day!'
// ADD CODE HERE
for (let i = 0; i < synonyms.length; i++) {
  let newString = "Have a "+ synonyms[i] + " day!";
  greetings.push(newString);
}

// 2. 
// Loop through the greetings array, logging each greeting to the console:
// 'Have a fantastic day!'
// 'Have a wonderful day!'
// 'Have a great day!'
// ADD CODE HERE
for (let i = 0; i < greetings.length; i++){
  console.log(greetings[i])
}

#!javascript

const increaseByTwo = [1, 2, 3, 4, 5];
// ADD CODE HERE
for(let i =0; i<increaseByTwo.length; i++){
  increaseByTwo[i] += 2;
}

// Uncomment the line below to check your work!
console.log(increaseByTwo); // -> should print [3, 4, 5, 6, 7];

#!javascript

const checkObj = {
    oddNum: 1,
    evenNum: 2,
    foundNum: 5,
    randomNum: 18
  };
  
  let found = 0;
  // ADD CODE HERE
  for(const property in checkObj ){
    if(property === "foundNum"){
      found =1;
    }
  }
  console.log(found);

#!javascript

const sumMe = {
    hello: 'there',
    you: 8,
    are: 7,
    almost: '10',
    done: '!'
  };
  let total = 0;
  // ADD CODE HERE
  for (const prop in sumMe){
    if(typeof sumMe[prop] === "number"){
      total += sumMe[prop];
    }
  }
  console.log(total);

#!javascript

function StartGame() {
    let input;
    input = prompt("Welcome to Blackjack. Do you want to play? (Y)es or (N)o").toUpperCase();
  
    if (input == 'Y') {
      console.log("Game starting...")
    }
  }
  
  StartGame();

#!javascript

// How to Remove Elements from an Array.Every time you call the pop() method, it removes an element 
// from the end of the array.

const salad = ['tomato', 'onion', 'corn'];
salad.pop();
console.log(salad);

#!javascript

// shift() method to remove an element from the beginning of an array.

const salad = ['tomato', 'onion', 'corn'];
salad.shift();
console.log(salad);

#!javascript

// How to Copy and Clone an Array.
// slice() method doesn't change the original array. Instead, it creates a new shallow copy of the original array.

const salad = ['tomato', 'onion', 'corn'];
const saladCopy = salad.slice();

console.log(saladCopy);

salad === saladCopy; // returns false

#!javascript

// How to Use the Spread Operator.
const salad = ['tomato', 'onion', 'corn', 'carrot', 'avocado'];
const saladCloned = [...salad];
console.log(saladCloned);

#!javascript

// How to Merge Arrays.
const names = ['Nata', 'Sasha', 'Sarah'];
const veggies = ['tomato', 'onion', 'corn', 'carrot', 'avocado'];

const namesVeggies = [...names, ...veggies];
console.log(namesVeggies)

#!javascript

// The filter() method creates a new array with all the elements 
// that satisfies the condition mentioned in the function. 
let students = [
    {
       'id': 001,
       'f_name': 'Alex',
       'l_name': 'B',
       'gender': 'M',
       'married': false,
       'age': 22,
       'paid': 250,  
       'courses': ['JavaScript', 'React']
    },
    {
       'id': 002,
       'f_name': 'Ibrahim',
       'l_name': 'M',
       'gender': 'M',
       'married': true,
       'age': 32,
       'paid': 150,  
       'courses': ['JavaScript', 'PWA']
    },
    {
       'id': 003,
       'f_name': 'Rubi',
       'l_name': 'S',
       'gender': 'F',
       'married': false,
       'age': 27,
       'paid': 350,  
       'courses': ['Blogging', 'React', 'UX']
    },
    {
       'id': 004,
       'f_name': 'Zack',
       'l_name': 'F',
       'gender': 'M',
       'married': true,
       'age': 36,
       'paid': 250,  
       'courses': ['Git', 'React', 'Branding']
    } 
 ];

const femaleStudents = students.filter((element, index) => {
    return element.gender === 'F';
  })
  
  console.log(femaleStudents);

#!javascript

// The map() method creates a new array by iterating through the elements and 
// applying logic we provided in the function as an argument.

let numbers = [2, 4, 6, 8, 10];

// function to return the square of a number
function square(number) {
  return number * number;
}

// apply square() function to each item of the numbers list
let square_numbers = numbers.map(square);
console.log(square_numbers);
